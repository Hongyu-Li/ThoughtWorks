{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2019-02-27T00:21:24.390Z",
    "end": "2019-02-27T00:21:24.402Z",
    "duration": 12,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "e3eb0e5e-e2ed-4779-bb87-8466ed215d3d",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "087a4f32-be5e-4920-a9bb-ff3d34777da2",
        "title": "Tests of Tasking Analysis",
        "fullFile": "D:\\Atom\\ThoughtWorks_HWs\\HW4_Tasking\\spec\\best-charge-task-tests.js",
        "file": "\\spec\\best-charge-task-tests.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "returns items charge sheet",
            "fullTitle": "Tests of Tasking Analysis returns items charge sheet",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0001 x 1\", \"ITEM0013 x 2\", \"ITEM0022 x 1\"];\nvar ItemsInfo = loadAllItems();\nvar ChargeSheet = getChargeSheet(OrderInfo, ItemsInfo);\nvar sheet_expect_result = [{id: 'ITEM0001', name: '黄焖鸡', count: 1, itemprice: 18},\n                           {id: 'ITEM0013', name: '肉夹馍', count: 2, itemprice: 12},\n                           {id: 'ITEM0022', name: '凉皮', count: 1, itemprice: 8}];\nexpect(sheet_expect_result).to.eql(ChargeSheet);",
            "err": {},
            "isRoot": false,
            "uuid": "6be5d722-32b6-4f57-8512-5497e7cb973d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns total charge given a charge sheet w/o promotions",
            "fullTitle": "Tests of Tasking Analysis returns total charge given a charge sheet w/o promotions",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0001 x 1\", \"ITEM0013 x 2\", \"ITEM0022 x 1\"];\nvar ItemsInfo = loadAllItems();\nvar ChargeSheet = getChargeSheet(OrderInfo, ItemsInfo);\nvar TotalCharge = getTotalCharge(ChargeSheet);\nvar expect_result = 38;\nexpect(expect_result).to.equal(TotalCharge);",
            "err": {},
            "isRoot": false,
            "uuid": "6f8fc769-dcbf-4055-86df-75cdf391e3ec",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns best charge w promotion 2",
            "fullTitle": "Tests of Tasking Analysis returns best charge w promotion 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0013 x 4\", \"ITEM0022 x 1\"];\nvar ItemsInfo = loadAllItems();\nvar ChargeSheet = getChargeSheet(OrderInfo, ItemsInfo);\nvar PromInfo = loadPromotions();\nvar BestChargeInfo = getBestCharge(ChargeSheet,PromInfo);\nvar expect_result = {type: '满30减6元',\n                     bestcharge: 26,\n                     savecharge: 6,\n                     totalcharge: 32};\nexpect(expect_result).to.eql(BestChargeInfo);",
            "err": {},
            "isRoot": false,
            "uuid": "2be46583-b559-4fdd-adbe-7224f3a01e8c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns best charge w promotion 1",
            "fullTitle": "Tests of Tasking Analysis returns best charge w promotion 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0001 x 1\", \"ITEM0013 x 2\", \"ITEM0022 x 1\"];\nvar ItemsInfo = loadAllItems();\nvar ChargeSheet = getChargeSheet(OrderInfo, ItemsInfo);\nvar PromInfo = loadPromotions();\nvar BestChargeInfo = getBestCharge(ChargeSheet,PromInfo);\nvar expect_result = {type: '指定菜品半价',\n                     bestcharge: 25,\n                     savecharge: 13,\n                     totalcharge: 38,\n                     promitems: ['黄焖鸡','凉皮']};\nexpect(expect_result).to.eql(BestChargeInfo);",
            "err": {},
            "isRoot": false,
            "uuid": "4f925461-0069-4a1e-917e-49aac692cc78",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns best charge w/o promotions",
            "fullTitle": "Tests of Tasking Analysis returns best charge w/o promotions",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0013 x 4\"];\nvar ItemsInfo = loadAllItems();\nvar ChargeSheet = getChargeSheet(OrderInfo, ItemsInfo);\nvar PromInfo = loadPromotions();\nvar BestChargeInfo = getBestCharge(ChargeSheet,PromInfo);\nvar expect_result = {type: '无优惠',\n                     bestcharge: 24,\n                     savecharge: 0,\n                     totalcharge: 24};\nexpect(expect_result).to.eql(BestChargeInfo);",
            "err": {},
            "isRoot": false,
            "uuid": "32aa8507-f8a2-4be6-865a-e0f8f0f16f55",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns formattable output w propmotion 1",
            "fullTitle": "Tests of Tasking Analysis returns formattable output w propmotion 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0001 x 1\", \"ITEM0013 x 2\", \"ITEM0022 x 1\"];\n//var ItemsInfo = loadAllItems();\n//var PromInfo = loadPromotions();\nvar OutputSheet = bestCharge(OrderInfo);\nvar expect_result = `\n============= 订餐明细 =============\n黄焖鸡 x 1 = 18元\n肉夹馍 x 2 = 12元\n凉皮 x 1 = 8元\n-----------------------------------\n使用优惠:\n指定菜品半价(黄焖鸡，凉皮)，省13元\n-----------------------------------\n总计：25元\n===================================`.trim();\nexpect(expect_result).to.eql(OutputSheet);",
            "err": {},
            "isRoot": false,
            "uuid": "f88fee86-e66f-475a-858b-1a6146ce3d0d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns formattable output w promotion 2",
            "fullTitle": "Tests of Tasking Analysis returns formattable output w promotion 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0013 x 4\", \"ITEM0022 x 1\"];\n//var ItemsInfo = loadAllItems();\n//var PromInfo = loadPromotions();\nvar OutputSheet = bestCharge(OrderInfo);\nvar expect_result =  `\n============= 订餐明细 =============\n肉夹馍 x 4 = 24元\n凉皮 x 1 = 8元\n-----------------------------------\n使用优惠:\n满30减6元，省6元\n-----------------------------------\n总计：26元\n===================================`.trim();\nexpect(expect_result).to.eql(OutputSheet);",
            "err": {},
            "isRoot": false,
            "uuid": "c936d6d9-bd66-4f90-aa46-f6435ae0e6c8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns formattable output w/o promotions",
            "fullTitle": "Tests of Tasking Analysis returns formattable output w/o promotions",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0013 x 4\"];\n//var ItemsInfo = loadAllItems();\n//var PromInfo = loadPromotions();\nvar OutputSheet = bestCharge(OrderInfo);\nvar expect_result =  `\n============= 订餐明细 =============\n肉夹馍 x 4 = 24元\n-----------------------------------\n总计：24元\n===================================`.trim();\nexpect(expect_result).to.eql(OutputSheet);",
            "err": {},
            "isRoot": false,
            "uuid": "8c5ac80a-b5af-469f-97fc-dfdc7dbf6e2c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "6be5d722-32b6-4f57-8512-5497e7cb973d",
          "6f8fc769-dcbf-4055-86df-75cdf391e3ec",
          "2be46583-b559-4fdd-adbe-7224f3a01e8c",
          "4f925461-0069-4a1e-917e-49aac692cc78",
          "32aa8507-f8a2-4be6-865a-e0f8f0f16f55",
          "f88fee86-e66f-475a-858b-1a6146ce3d0d",
          "c936d6d9-bd66-4f90-aa46-f6435ae0e6c8",
          "8c5ac80a-b5af-469f-97fc-dfdc7dbf6e2c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 4,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}