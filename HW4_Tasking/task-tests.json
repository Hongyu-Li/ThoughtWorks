{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2019-02-27T00:13:40.841Z",
    "end": "2019-02-27T00:13:40.855Z",
    "duration": 14,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "1400cb25-d930-4ccc-abbb-503ca9910482",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "21228404-ae78-4bdb-82d7-0431aaf2eb24",
        "title": "Tests of Tasking Analysis",
        "fullFile": "D:\\Atom\\ThoughtWorks_HWs\\HW4_Tasking\\spec\\best-charge-task-tests.js",
        "file": "\\spec\\best-charge-task-tests.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "returns items charge sheet",
            "fullTitle": "Tests of Tasking Analysis returns items charge sheet",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0001 x 1\", \"ITEM0013 x 2\", \"ITEM0022 x 1\"];\nvar ItemsInfo = loadAllItems();\nvar ChargeSheet = getChargeSheet(OrderInfo, ItemsInfo);\nvar sheet_expect_result = [{id: 'ITEM0001', name: '黄焖鸡', count: 1, itemprice: 18},\n                           {id: 'ITEM0013', name: '肉夹馍', count: 2, itemprice: 12},\n                           {id: 'ITEM0022', name: '凉皮', count: 1, itemprice: 8}];\nexpect(sheet_expect_result).to.eql(ChargeSheet);",
            "err": {},
            "isRoot": false,
            "uuid": "2186e99d-ac43-45db-8258-df624f933cde",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns total charge given a charge sheet w/o promotions",
            "fullTitle": "Tests of Tasking Analysis returns total charge given a charge sheet w/o promotions",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0001 x 1\", \"ITEM0013 x 2\", \"ITEM0022 x 1\"];\nvar ItemsInfo = loadAllItems();\nvar ChargeSheet = getChargeSheet(OrderInfo, ItemsInfo);\nvar TotalCharge = getTotalCharge(ChargeSheet);\nvar expect_result = 38;\nexpect(expect_result).to.equal(TotalCharge);",
            "err": {},
            "isRoot": false,
            "uuid": "8cbf2a02-fbff-434f-ae05-af6306159019",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns best charge w promotion 2",
            "fullTitle": "Tests of Tasking Analysis returns best charge w promotion 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0013 x 4\", \"ITEM0022 x 1\"];\nvar ItemsInfo = loadAllItems();\nvar ChargeSheet = getChargeSheet(OrderInfo, ItemsInfo);\nvar PromInfo = loadPromotions();\nvar BestChargeInfo = getBestCharge(ChargeSheet,PromInfo);\nvar expect_result = {type: '满30减6元',\n                     bestcharge: 26,\n                     savecharge: 6,\n                     totalcharge: 32};\nexpect(expect_result).to.eql(BestChargeInfo);",
            "err": {},
            "isRoot": false,
            "uuid": "d873a8ec-6f7e-46f0-af70-4eac844e5c6c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns best charge w promotion 1",
            "fullTitle": "Tests of Tasking Analysis returns best charge w promotion 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0001 x 1\", \"ITEM0013 x 2\", \"ITEM0022 x 1\"];\nvar ItemsInfo = loadAllItems();\nvar ChargeSheet = getChargeSheet(OrderInfo, ItemsInfo);\nvar PromInfo = loadPromotions();\nvar BestChargeInfo = getBestCharge(ChargeSheet,PromInfo);\nvar expect_result = {type: '指定菜品半价',\n                     bestcharge: 25,\n                     savecharge: 13,\n                     totalcharge: 38,\n                     promitems: ['黄焖鸡','凉皮']};\nexpect(expect_result).to.eql(BestChargeInfo);",
            "err": {},
            "isRoot": false,
            "uuid": "b4a8f210-816e-41b0-ad3c-b8dcfb9fcdd3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns best charge w/o promotions",
            "fullTitle": "Tests of Tasking Analysis returns best charge w/o promotions",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0013 x 4\"];\nvar ItemsInfo = loadAllItems();\nvar ChargeSheet = getChargeSheet(OrderInfo, ItemsInfo);\nvar PromInfo = loadPromotions();\nvar BestChargeInfo = getBestCharge(ChargeSheet,PromInfo);\nvar expect_result = {type: '无优惠',\n                     bestcharge: 24,\n                     savecharge: 0,\n                     totalcharge: 24};\nexpect(expect_result).to.eql(BestChargeInfo);",
            "err": {},
            "isRoot": false,
            "uuid": "97bd73de-ce85-47d7-a5b1-9e6fade75cc4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns formattable output w propmotion 1",
            "fullTitle": "Tests of Tasking Analysis returns formattable output w propmotion 1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0001 x 1\", \"ITEM0013 x 2\", \"ITEM0022 x 1\"];\nvar ItemsInfo = loadAllItems();\nvar PromInfo = loadPromotions();\nvar OutputSheet = bestCharge(OrderInfo,ItemsInfo,PromInfo);\nvar expect_result = `\n============= 订餐明细 =============\n黄焖鸡 x 1 = 18元\n肉夹馍 x 2 = 12元\n凉皮 x 1 = 8元\n-----------------------------------\n使用优惠:\n指定菜品半价(黄焖鸡，凉皮)，省13元\n-----------------------------------\n总计：25元\n===================================`.trim();\nexpect(expect_result).to.eql(OutputSheet);",
            "err": {},
            "isRoot": false,
            "uuid": "122eb4e3-2a29-4516-83e9-cba2dc155653",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns formattable output w promotion 2",
            "fullTitle": "Tests of Tasking Analysis returns formattable output w promotion 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0013 x 4\", \"ITEM0022 x 1\"];\nvar ItemsInfo = loadAllItems();\nvar PromInfo = loadPromotions();\nvar OutputSheet = bestCharge(OrderInfo,ItemsInfo,PromInfo);\nvar expect_result =  `\n============= 订餐明细 =============\n肉夹馍 x 4 = 24元\n凉皮 x 1 = 8元\n-----------------------------------\n使用优惠:\n满30减6元，省6元\n-----------------------------------\n总计：26元\n===================================`.trim();\nexpect(expect_result).to.eql(OutputSheet);",
            "err": {},
            "isRoot": false,
            "uuid": "69199767-231c-4d6c-a55a-0890b72db438",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns formattable output w/o promotions",
            "fullTitle": "Tests of Tasking Analysis returns formattable output w/o promotions",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let OrderInfo = [\"ITEM0013 x 4\"];\nvar ItemsInfo = loadAllItems();\nvar PromInfo = loadPromotions();\nvar OutputSheet = bestCharge(OrderInfo,ItemsInfo,PromInfo);\nvar expect_result =  `\n============= 订餐明细 =============\n肉夹馍 x 4 = 24元\n-----------------------------------\n总计：24元\n===================================`.trim();\nexpect(expect_result).to.eql(OutputSheet);",
            "err": {},
            "isRoot": false,
            "uuid": "fac18124-55fd-4991-8c95-e78c8bdbc4d0",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2186e99d-ac43-45db-8258-df624f933cde",
          "8cbf2a02-fbff-434f-ae05-af6306159019",
          "d873a8ec-6f7e-46f0-af70-4eac844e5c6c",
          "b4a8f210-816e-41b0-ad3c-b8dcfb9fcdd3",
          "97bd73de-ce85-47d7-a5b1-9e6fade75cc4",
          "122eb4e3-2a29-4516-83e9-cba2dc155653",
          "69199767-231c-4d6c-a55a-0890b72db438",
          "fac18124-55fd-4991-8c95-e78c8bdbc4d0"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}